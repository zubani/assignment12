{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f0bd1f5e-db0f-48eb-8e1c-7df598399a6d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'>\n",
      "<class 'int'>\n",
      "<class 'int'>\n",
      "<class 'float'>\n",
      "<class 'str'>\n",
      "<class 'tuple'>\n"
     ]
    }
   ],
   "source": [
    "#create one variable containing following type of data\n",
    "l1=[1,2,3,45.65,\"komal\",(56,67,88,\"rahul\")]\n",
    "for i in l1 :\n",
    "    print(type(i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d201518f-0023-4b61-8090-55d5b6f1a0d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'str'>\n",
      "<class 'str'>\n",
      "<class 'list'>\n",
      "<class 'float'>\n"
     ]
    }
   ],
   "source": [
    "#given are some following vaiables containing data\n",
    "var1=''\n",
    "print(type(var1))\n",
    "var2='[DS,ML,Python]'\n",
    "print(type(var2))\n",
    "var3=['DS','ML','Python']\n",
    "print(type(var3))\n",
    "var4=1.\n",
    "print(type(var4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0abbebe8-a825-4a20-b459-de09fc7149d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.0\n",
      "0\n",
      "3\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "#explain the use of the following operator using an example\n",
    "a=15/5\n",
    "print(a)\n",
    "b=15%5\n",
    "print(b)\n",
    "c=15//5\n",
    "print(c)\n",
    "d=2**3\n",
    "print(d)\n",
    "     "
   ]
  },
  {
   "cell_type": "raw",
   "id": "72bf6180-39ee-4a07-b121-e6331513ebf3",
   "metadata": {},
   "source": [
    "#explain the use of the following operator using an example\n",
    "a=15/5\n",
    "print(a)\n",
    "b=15%5\n",
    "print(b)\n",
    "c=15//5\n",
    "print(c)\n",
    "d=2**3\n",
    "print(d)\n",
    "     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "01423f45-d962-46c1-9208-b1ec1b8a8131",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.0\n",
      "0\n",
      "3\n",
      "8\n"
     ]
    }
   ],
   "source": [
    "#explain the use of the following operator using an example\n",
    "a=15/5\n",
    "print(a)\n",
    "b=15%5\n",
    "print(b)\n",
    "c=15//5\n",
    "print(c)\n",
    "d=2**3\n",
    "print(d)\n",
    "     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a009b77f-2be9-4968-a54e-e36622bd299d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'int'>\n",
      "<class 'str'>\n",
      "<class 'float'>\n",
      "<class 'list'>\n",
      "<class 'list'>\n",
      "<class 'dict'>\n",
      "<class 'complex'>\n",
      "<class 'bool'>\n"
     ]
    }
   ],
   "source": [
    "#create a list of length 10 of your choice containing multiple type of data using the loop print the elment and its data type\n",
    "l2=[1,'komal',35.63,[],[a],{},3+5j,True]\n",
    "for i in l2:\n",
    "    print(type(i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "76d115a7-9e51-4351-83f3-edf4ac37017d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "not divisible\n",
      "3\n",
      "divisible\n",
      "4\n",
      "not divisible\n",
      "5\n",
      "not divisible\n",
      "6\n",
      "divisible\n",
      "7\n",
      "not divisible\n",
      "8\n",
      "not divisible\n",
      "9\n",
      "divisible\n",
      "12\n",
      "divisible\n",
      "13\n",
      "not divisible\n",
      "15\n",
      "divisible\n",
      "19\n",
      "not divisible\n",
      "18\n",
      "divisible\n",
      "27\n",
      "divisible\n",
      "25\n",
      "not divisible\n",
      "24\n",
      "divisible\n",
      "23\n",
      "not divisible\n",
      "22\n",
      "not divisible\n",
      "21\n",
      "divisible\n",
      "36\n",
      "divisible\n"
     ]
    }
   ],
   "source": [
    "#crete a list contining 25 in data type using for loop and if elsr statement print if the element is divisible or not by 3\n",
    "l2=[2,3,4,5,6,7,8,9,12,13,15,19,18,27,25,24,23,22,21,36]\n",
    "for i in l2 :\n",
    "    print(i)\n",
    "    if i%3==0 :\n",
    "        print(\"divisible\")\n",
    "    else:\n",
    "        print(\"not divisible\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "07f3b505-2891-4432-9b3f-4a24be46224c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#what do you understand by mutable and immutable data type? give example for both showing this property\n",
    "\"\"\"mutable function are the function that can be changed once they are created but immutable fuction cannot be changed once they \n",
    "are created \"\"\"\n",
    "l1=[1,2,3,4]\n",
    "print(l1)\n",
    "l1[2]=10\n",
    "print(l1)\n",
    "#this is mutable function\n",
    "#if we went to change string index it will not change hence they are immutable fuctionn where as index of list int had been change \n",
    "#therfore called mutable function\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "93772dba-b6e5-40e2-859e-bcbd401df900",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Divisible\n",
      "Number of times divisible: 1\n"
     ]
    }
   ],
   "source": [
    "#create a while loop verify if the number A is purely divisible by number B and of so then how many times it can be\n",
    "#divisible\n",
    "\n",
    "\n",
    "A = 15\n",
    "B = 5\n",
    "count = 0\n",
    "\n",
    "while A % B == 0:\n",
    "    print(\"Divisible\")\n",
    "    A //= B\n",
    "    count += 1\n",
    "\n",
    "print(\"Number of times divisible:\", count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bbee20ed-a69c-41ca-a24d-165730397925",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
